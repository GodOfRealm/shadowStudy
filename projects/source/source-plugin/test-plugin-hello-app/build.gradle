apply plugin: 'com.android.application'
apply plugin: 'com.tencent.shadow.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion project.COMPILE_SDK_VERSION

    defaultConfig {
        applicationId "com.demo.test.plugin.hello_app"
        minSdkVersion project.MIN_SDK_VERSION
        targetSdkVersion project.TARGET_SDK_VERSION
        versionCode project.VERSION_CODE
        versionName project.VERSION_NAME
        testInstrumentationRunner "com.tencent.shadow.test.plugin.androidx_cases.app.CustomAndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.create("release")
            signingConfig.initWith(buildTypes.debug.signingConfig)
        }
    }

    // 将插件applicationId设置为和宿主相同
    productFlavors {
        plugin {
            applicationId project.SAMPLE_HOST_APP_APPLICATION_ID
        }
    }

    lintOptions {
        abortOnError false
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}



dependencies {
    def activity_version = "1.2.2"
    def appcompat_version = "1.3.1"

    implementation "androidx.activity:activity:$activity_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    pluginCompileOnly 'com.tencent.shadow.core:runtime'

    implementation 'com.alibaba:arouter-api:1.5.1'
    kapt 'com.alibaba:arouter-compiler:1.5.1'
}
buildscript {
    repositories {
        if (!System.getenv().containsKey("DISABLE_TENCENT_MAVEN_MIRROR")) {
            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        } else {
            google()
            jcenter()
        }
    }

    dependencies {
        classpath 'com.tencent.shadow.core:runtime'
        classpath 'com.tencent.shadow.core:activity-container'
        classpath 'com.tencent.shadow.core:gradle-plugin'
        classpath 'org.javassist:javassist:3.28.0-GA'
    }
}


shadow {
    transform {
//        useHostContext = ['abc']
    }

    packagePlugin {
        pluginTypes {
            debug {
                loaderApkConfig = new Tuple2('source-loader-debug.apk', ':source-loader:assembleDebug')
                runtimeApkConfig = new Tuple2('source-runtime-debug.apk', ':source-runtime:assembleDebug')
                pluginApks {

                    pluginApk1 {
                        businessName = 'hello-app'
                        partKey = 'test-plugin-hello-app'
                        buildTask = ':test-plugin-hello-app:assemblePluginDebug'
                        apkPath = 'projects/source/source-plugin/test-plugin-hello-app/build/outputs/apk/plugin/debug/test-plugin-hello-app-plugin-debug.apk'
                        hostWhiteList = ["com.demo.source.host.lib"]
                    }

                }
            }

            release {
                loaderApkConfig = new Tuple2('source-loader-release.apk', ':source-loader:assembleRelease')
                runtimeApkConfig = new Tuple2('source-runtime-release.apk', ':source-runtime:assembleRelease')
            }
        }

        loaderApkProjectPath = 'projects/source/source-plugin/source-loader'
        runtimeApkProjectPath = 'projects/source/source-plugin/source-runtime'

        archiveSuffix = System.getenv("PluginSuffix") ?: ""
        archivePrefix = 'plugin'
        destinationDir = "${getRootProject().getBuildDir()}"

        version = 4
        compactVersion = [1, 2, 3]
        uuidNickName = "1.1.5"
        uuid = '1234567890'
    }
}